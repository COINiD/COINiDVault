#!/usr/bin/env node
const { execSync } = require('child_process');

const rootDir = `${__dirname}/..`;
const prefix = process.argv[2];

let time = new Date()
  .toISOString()
  .replace(/\D/g, '')
  .substr(0, 12);
if (prefix !== undefined) {
  time = prefix + time;
}

const runTests = () => {
  try {
    execSync(`cd ${rootDir}; yarn test`, { stdio: 'inherit' });
  } catch (err) {
    return false;
  }
  return true;
};

const doBuilds = platform => {
  execSync(`cd ${rootDir}/${platform}; fastlane beta time:${time} package_name:org.coinid.vault`, {
    stdio: 'inherit',
  });
};

const createSHA256SUMS = dir => {
  execSync(
    `
    cd ${rootDir}/builds/vault/${dir};
    shasum -a256 *.apk > SHA256SUMS;
    gpg --yes --digest-algo sha256 --clearsign SHA256SUMS;
    rm SHA256SUMS;
  `,
    { stdio: 'inherit' },
  );
};

const pause = text => {
  execSync(
    `
    read -p "${text}" nothing;
  `,
    { stdio: 'inherit' },
  );
};

if (runTests()) {
  doBuilds('ios');
  doBuilds('android');

  pause('Prepare to sign builds... Press enter to continue.');

  createSHA256SUMS(time);
  createSHA256SUMS('latest');
} else {
  console.log('Tests failed!');
}
